pipeline {
    agent any
    
    stages {
        stage('Get Code') {
            steps {
                //Obtener códifo del repositorio GitHub
                git branch: 'develop_Javier', url: 'https://github.com/Javichu1967/CURSO-UNIR-DEVOPS.git'
                //git 'https://github.com/Javichu1967/CURSO-UNIR-DEVOPS.git'
            }
        }
        
        stage ('Test') {
            parallel { //Para que se ejecute en paralelo
                stage('Unit') {
                    steps {
                        catchError(message:'ErrorUnit',buildResult:'SUCCESS',stageResult:'SUCCESS') {
                            bat '''
                                set PYTHONPATH=%WORKSPACE%
                                C:/Users/javie/AppData/Local/Programs/Python/Python311/Scripts/pytest.exe --junitxml=result-unit.xml test/unit
                            '''
                            junit 'result-unit.xml'
                        }
                    }
                }
        
                stage('Rest') {
                    steps {
                        catchError(message:'ErrorUnit',buildResult:'SUCCESS',stageResult:'SUCCESS') {
                            bat '''
                                set FLASK_APP=app/api.py
                                start C:/Users/javie/AppData/Local/Programs/Python/Python311/Scripts/flask run
                                start java -jar "C:/JAVIER/Curso KSchool/INSTALACIONES/Wiremock/wiremock-standalone-3.5.4.jar" --port 9090 --verbose --root-dir test/wiremock
    
                                timeout 15
        
                                set PYTHONPATH=%WORKSPACE%
                                C:/Users/javie/AppData/Local/Programs/Python/Python311/Scripts/pytest.exe --junitxml=result-rest.xml test/rest
                            '''
                            junit 'result-rest.xml'
                        }
                    }
                }
            }
        }

        stage('static') {
            steps {
                bat '''
                    C:/Users/javie/AppData/Local/Packages/PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0/LocalCache/local-packages/Python311/Scripts/flake8 --format=pylint --exit-zero app >flake8.out
                '''
                recordIssues tools: [flake8(name: 'flake8', pattern: 'flake8.out')], qualityGates: [[threshold: 8, type: 'TOTAL', unstable: true], [threshold: 10, type: 'TOTAL', unstable: false]]
            }
        }
        
        stage('security') {
            steps {
                bat '''
                    C:/Users/javie/AppData/Local/Packages/PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0/LocalCache/local-packages/Python311/Scripts/bandit --exit-zero -r . -f custom -o bandit.out --severity-level medium --msg-template "{abspath}:{line}: {severity}: {test_id}: {msg}"
                '''
                //--exit-zero --> para que bandit no haga nada, siempre devolverá 0. Y ya decidiré en las qualityGates, como lo marco yo.
                //qualityGates: [[threshold: 10, type: 'TOTAL', unstable: true] --> si encuentra 10 hallazgos del tipo que sea (threshold: 10) lo marca como inestable.
                // y si encuentras 15 o más (, [threshold: 15, type: 'TOTAL', unstable: false]]) márcalo como fallido.
                recordIssues tools: [pyLint(name: 'bandit', pattern: 'bandit.out')], qualityGates: [[threshold: 2, type: 'TOTAL', unstable: true], [threshold: 4, type: 'TOTAL', unstable: false]]
            }
        }

        stage('Cobertura') {
            steps {
                bat '''
                    C:/Users/javie/AppData/Local/Packages/PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0/LocalCache/local-packages/Python311/Scripts/coverage run --branch --source=app --omit=app/__init__.py,app/api.py -m pytest test/unit
                    C:/Users/javie/AppData/Local/Packages/PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0/LocalCache/local-packages/Python311/Scripts/coverage xml
                '''
                catchError(message:'ErrorCobertura',buildResult:'UNSTABLE',stageResult:'FAILURE') {
                    cobertura coberturaReportFile: 'coverage.xml', conditionalCoverageTargets: '100,80,90', lineCoverageTargets: '100,85,95', onlyStable: false, failUnstable: false
                }
            }
        }
        
        stage('Performance') {
            steps {
                bat '''
                    "C:/JAVIER/Curso KSchool/INSTALACIONES/JMeter/apache-jmeter-5.6.3/bin/jmeter" -n -t "C:/JAVIER/Curso KSchool/INSTALACIONES/JMeter/apache-jmeter-5.6.3/bin/TestPlanReto1.jmx" -f -l flask.jtl
                '''
                perfReport sourceDataFiles: 'flask.jtl'
            }
        }
    }
}
